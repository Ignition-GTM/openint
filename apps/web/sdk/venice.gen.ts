/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/health": {
    get: operations["health"];
  };
  "/resources": {
    get: operations["listResources"];
  };
  "/pipelines": {
    get: operations["listPipelines"];
  };
  "/pipelines/{id}": {
    delete: operations["deletePipeline"];
  };
  "/resources/{id}": {
    get: operations["getResource"];
  };
  "/integrations": {
    get: operations["adminListIntegrations"];
  };
  "/": {
    get: operations["getOpenapiDocument"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: never;
  responses: {
    /** @description Error response */
    error: {
      content: {
        "application/json": {
          message: string;
          code: string;
          issues?: ({
              message: string;
            })[];
        };
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  health: {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": string;
        };
      };
      default: components["responses"]["error"];
    };
  };
  listResources: {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": ({
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
              id: string;
              providerName: string;
              displayName?: string | null;
              endUserId?: string | null;
              integrationId: string;
              institutionId?: string | null;
              settings?: ({
                [key: string]: ((string | number | boolean | ("null" | null)) | (Record<string, never>)[] | ({
                  [key: string]: unknown | undefined;
                })) | undefined;
              }) | null;
              standard?: ({
                displayName: string;
                /** @enum {string|null} */
                status?: "healthy" | "disconnected" | "error" | "manual" | null;
                statusMessage?: string | null;
                labels?: (string)[];
              }) | null;
            })[];
        };
      };
      default: components["responses"]["error"];
    };
  };
  listPipelines: {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": ({
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
              id: string;
              sourceId?: string;
              sourceState?: {
                [key: string]: ((string | number | boolean | ("null" | null)) | (Record<string, never>)[] | ({
                  [key: string]: unknown | undefined;
                })) | undefined;
              };
              destinationId?: string;
              destinationState?: {
                [key: string]: ((string | number | boolean | ("null" | null)) | (Record<string, never>)[] | ({
                  [key: string]: unknown | undefined;
                })) | undefined;
              };
              linkOptions?: ((string | ([[object Object]])[] | ([[object Object], [object Object]])[])[]) | null;
              /** Format: date-time */
              lastSyncStartedAt?: string | null;
              /** Format: date-time */
              lastSyncCompletedAt?: string | null;
            })[];
        };
      };
      default: components["responses"]["error"];
    };
  };
  deletePipeline: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": true;
        };
      };
      default: components["responses"]["error"];
    };
  };
  getResource: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": {
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            id: string;
            providerName: string;
            displayName?: string | null;
            endUserId?: string | null;
            integrationId: string;
            institutionId?: string | null;
            settings?: ({
              [key: string]: ((string | number | boolean | ("null" | null)) | (Record<string, never>)[] | ({
                [key: string]: unknown | undefined;
              })) | undefined;
            }) | null;
            standard?: ({
              displayName: string;
              /** @enum {string|null} */
              status?: "healthy" | "disconnected" | "error" | "manual" | null;
              statusMessage?: string | null;
              labels?: (string)[];
            }) | null;
          };
        };
      };
      default: components["responses"]["error"];
    };
  };
  adminListIntegrations: {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": ({
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
              id: string;
              providerName: string;
              config?: ({
                [key: string]: ((string | number | boolean | ("null" | null)) | (Record<string, never>)[] | ({
                  [key: string]: unknown | undefined;
                })) | undefined;
              }) | null;
              /** @description Allow end user to create resources using this integration's configuration */
              endUserAccess?: boolean | null;
              orgId: string;
              displayName?: string | null;
            })[];
        };
      };
      default: components["responses"]["error"];
    };
  };
  getOpenapiDocument: {
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      default: components["responses"]["error"];
    };
  };
}
